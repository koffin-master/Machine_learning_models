Resume‚ÄìJob Description Matching (Regression Models)

This project predicts the match score between a job description and a candidate‚Äôs resume using machine learning regression models.

The workflow applies TF-IDF vectorization to textual data, followed by training and tuning different regression models (Decision Tree, Random Forest, and XGBoost) using GridSearchCV. Model performance is evaluated with multiple error metrics.

‚∏ª

üì¶ Libraries Used
import pandas as pd
from sklearn.model_selection import train_test_split, GridSearchCV
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.pipeline import Pipeline
from sklearn.compose import ColumnTransformer
from sklearn.metrics import r2_score, root_mean_squared_error, mean_squared_error, mean_absolute_error
from sklearn.tree import DecisionTreeRegressor
from sklearn.ensemble import RandomForestRegressor
from xgboost import XGBRegressor

‚öôÔ∏è Workflow
	1.	Data Loading
	‚Ä¢	Load dataset resume_job_matching_dataset.csv.
	‚Ä¢	Features:
	‚Ä¢	job_description
	‚Ä¢	resume
	‚Ä¢	Target:
	‚Ä¢	match_score
	2.	Data Splitting
	‚Ä¢	Training: 70%
	‚Ä¢	Testing: 30%
	3.	Preprocessing
	‚Ä¢	Apply TF-IDF Vectorization separately on job_description and resume text.
	‚Ä¢	Managed via ColumnTransformer.
	4.	Models Used
	‚Ä¢	Decision Tree Regressor
	‚Ä¢	Random Forest Regressor
	‚Ä¢	XGBoost Regressor
	5.	Hyperparameter Tuning
	‚Ä¢	GridSearchCV with 5-fold cross-validation.
	‚Ä¢	Parameter grids include:
	‚Ä¢	Tree: max_depth, min_samples_split
	‚Ä¢	Random Forest: max_depth, n_estimators
	‚Ä¢	XGBoost: max_depth, n_estimators
	6.	Evaluation Metrics
	‚Ä¢	R¬≤ Score
	‚Ä¢	RMSE (Root Mean Squared Error)
	‚Ä¢	MSE (Mean Squared Error)
	‚Ä¢	MAE (Mean Absolute Error)

‚∏ª

üöÄ How to Run
	1.	Clone this repository.
	2.	Place the dataset resume_job_matching_dataset.csv in the project folder.
	3.	Install requirements:
pip install pandas scikit-learn xgboost
	4.	Run the script:
python resume_job_matching.py

‚∏ª

üìà Example Output

For each model (Tree, Random_Forest, XGB), the script prints:
R2 : Random_Forest 
 0.78
RMSE : Random_Forest 
 5.12
MSE : Random_Forest 
 26.2
MAE : Random_Forest 
 3.9

üëâ This project demonstrates how to combine NLP preprocessing and regression modeling to solve a real-world HR problem.
